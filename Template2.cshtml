@using FastCheckInMVC.Controllers;
@using FastCheckInModels.Models;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var format = ViewBag.Format as globalAttributesModel;
}

<div class="container" style="width:100%;">
    <div class="row">
        <div class="col-xs-12" style="padding-left:0;padding-right:0;">
            <br />
            <form data-bind="with: LanguageHandler" autocomplete="none">
                <div class="row">
                    <div class="col-xs-12">
                        <div class="text-center">
                            <img src="~/Resources/mitsis.png" width="120">
                        </div>
                    </div>
                    <div class="col-xs-12">
                        <br />
                    </div>
                    <div class="col-xs-12" data-bind="visible: page1.hasErrorMessage() == true">
                        <div class="notification mt-4 notification-error">
                            <div class="notification-theme error">
                                <div class="notification-icon">
                                    <img src="~/Resources/cancel.png">
                                </div>
                            </div>
                            <div class="notification-content" data-bind="text: page1.errorMessage()"></div>
                        </div>
                    </div>
                    <div class="col-xs-12">
                        <div class="bordered title-1">Fast Check-in</div>
                    </div>
                    <div class="col-xs-12">
                        <br />
                        <br />
                    </div>
                    <!--<div class="col-xs-6">
                    </div>
                    <div class="col-xs-6" style="padding-right:0;">
                        <select class="form-control" id="availableLanguages">
                        <option>English<option>
                        <option>Greek<option>
                        <option>German<option>
                        <option>French<option>
                        </select>
                    </div>-->
                </div>
                <div class="row">
                    <div class="col-xs-12" style="padding-bottom:5px;">
                        <div class="bordered title-2" data-bind="text: selectedDictionary() != null?selectedDictionary().WelcomeText:null"></div>
                    </div>
                </div>
                <div class="row form-row">
                    <div class="col-xs-6">
                        <label for="inputFirstName" class="customLabelsStyle" data-bind="text: selectedDictionary() != null?selectedDictionary().FirstName+'*':null"></label>
                        <input class="form-control" type="text" id="inputFirstName" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().FirstName:null" spellcheck="false" autocomplete="none" required>
                    </div>
                    <div class="col-xs-6">
                        <label for="inputLastName" class="customLabelsStyle" data-bind="text: selectedDictionary() != null?selectedDictionary().LastName+'*':null"></label>
                        <input class="form-control" type="text" id="inputLastName" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().LastName:null" spellcheck="false" autocomplete="none" required>
                    </div>
                </div>
                <div class="row form-row">
                    <div class="col-xs-9">
                        <label for="inputStreetAddress" class="customLabelsStyle" data-bind="text: selectedDictionary() != null?selectedDictionary().Street:null"></label>
                        <input class="form-control" type="text" id="inputStreetAddress" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().Street:null" spellcheck="false" autocomplete="none">
                    </div>
                    <div class="col-xs-3" style="">
                        <label for="inputZipcode" class="customLabelsStyle" data-bind="text: selectedDictionary() != null?selectedDictionary().ZipCode:null"></label>
                        <input class="form-control" type="text" id="inputZipcode" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().ZipCode:null" spellcheck="false" autocomplete="none">
                    </div>
                </div>
                <div class="row form-row">
                    <div class="col-xs-6">
                        <label for="inputCity" class="customLabelsStyle" data-bind="text: selectedDictionary() != null?selectedDictionary().City:null"></label>
                        <input class="form-control" type="text" id="inputCity" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().City:null" spellcheck="false" autocomplete="none">
                    </div>
                    <div class="col-xs-6">
                        <label for="inputCountry" style="font-family: Montserrat;font-size: 13px;" data-bind="text: selectedDictionary() != null?selectedDictionary().Country:null"></label>
                        <select class="form-control" id="inputNationality" style="padding-left:0;" data-bind="options: ResourceHandler.nationalities(), optionsText: 'NatCode', optionsValue: 'NatId',value: SignalRHandler.customer() != null?SignalRHandler.customer().Nationality:0">
                        </select>
                    </div>
                </div>
                <div class="row form-row">
                    <div class="col-xs-9">
                        <label for="inputEmail" class="customLabelsStyle" data-bind="text: selectedDictionary() != null?selectedDictionary().Email+'*':null"></label>
                        <input class="form-control" type="text" onfocus="OnFocusChanges(this)" id="inputEmail" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().Email:null" spellcheck="false" autocomplete="none" required>
                        <label style="font-family:Montserrat; font-size:12px; color:#767676;" data-bind="text: selectedDictionary() != null?selectedDictionary().EmailTxt:null"></label>
                    </div>
                    <div class="col-xs-3">
                        <label for="inputPassportNo" class="customLabelsStyle" data-bind="text: selectedDictionary() != null?selectedDictionary().Passport:null"></label>
                        <input class="form-control" type="text" id="inputPassportNo" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().Passport:null" spellcheck="false" autocomplete="none">
                    </div>
                </div>
                <div class="row form-row">
                    <div class="col-xs-6">
                        <label for="inputMobile" class="customLabelsStyle" data-bind="text: selectedDictionary() != null?selectedDictionary().Mobile:null"></label>
                        <input class="form-control" type="text" id="inputMobile" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().Mobile:null" spellcheck="false" autocomplete="none">
                    </div>
                    <div class="col-xs-6">
                        <label for="inputRoom" class="customLabelsStyle" data-bind="text: selectedDictionary() != null?selectedDictionary().Room:null"></label>
                        <input class="form-control" type="text" id="inputRoom" data-bind="value: SignalRHandler.customer() != null?SignalRHandler.customer().Room:null" spellcheck="false" autocomplete="none" readonly>
                    </div>
                </div>
                <div class="row form-row">
                    <div class="col-xs-9">
                        <label style="font-family:@format.labelAttributes.fontFamily;font-size:@(@format.labelAttributes.fontSize + "px");" class="form-check-label" for="inputAcceptEmails" data-bind="text: selectedDictionary() != null?selectedDictionary().SendEmail:null"></label>
                    </div>
                    <div class="col-xs-3" style="text-align: center;">
                        <label style="font-family:Montserrat; font-size:13px;font-weight: bold" class="radio-inline">
                            <input type="radio" name="optradio" id="inputAcceptEmailsYes"><span data-bind="text: selectedDictionary() != null?selectedDictionary().YesBtns:null"></span>
                        </label>
                        <label style="font-family:Montserrat; font-size:13px;font-weight: bold" class="radio-inline">
                            <input type="radio" name="optradio" id="inputAcceptEmailsNo"><span data-bind="text: selectedDictionary() != null?selectedDictionary().NoBtns:null"></span>
                        </label>
                    </div>
                </div>
                <div class="row form-row">
                    <div class="col-xs-9">
                        <label style="font-family:@format.labelAttributes.fontFamily;font-size:@(@format.labelAttributes.fontSize + "px");" class="form-check-label" for="inputAcceptEmails" data-bind="html: selectedDictionary() != null?selectedDictionary().SendLetter:null"></label>
                    </div>
                    <div class="col-xs-3" style="text-align: center;">
                        <label style="font-family:@format.labelAttributes.fontFamily;font-size:@(@format.labelAttributes.fontSize + "px");font-weight: bold" class="radio-inline">
                            <input type="radio" name="optradio2" id="inputAcceptGDPRYes"><span data-bind="text: selectedDictionary() != null?selectedDictionary().YesBtns:null"></span>
                        </label>
                        <label style="font-family:@format.labelAttributes.fontFamily;font-size:@(@format.labelAttributes.fontSize + "px");font-weight: bold" class="radio-inline">
                            <input type="radio" name="optradio2" id="inputAcceptGDPRNo"><span data-bind="text: selectedDictionary() != null?selectedDictionary().NoBtns:null"></span>
                        </label>
                    </div>
                    <div class="col-xs-12">
                        <br />
                    </div>
                    <div class="col-xs-12">
                        <div class="text-center">
                            <button type="button" class="btn btn-success btn-lg" style="background:#ac9766" onclick="placeSignatureBtn()" data-bind="text: selectedDictionary() != null?selectedDictionary().SignatureBtnTxt:null"></button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- /.modal -->
<!-- /.container -->
<div class="modal fade modal-fullscreen footer-to-bottom" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog animated zoomInLeft">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="font-size: 16px;margin-bottom: 0;background-color: transparent;color: #4a4a4a;opacity: 1;padding: 4px 20px;">╳</button>
            </div>
            <div class="modal-body">
                <iframe id="frame" src="" style="width:100%; height:100%; border:none; margin:0; padding:0px; overflow:hidden; z-index:10;">
                    Your browser doesn't support iframes
                </iframe>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<script>
     var page1 = this;
    page1.hasErrorMessage = ko.observable(false);
    page1.errorMessage = ko.observable(null);
    $(document).ready(function () {
        if (!localStorage.GdprFlag) {
            document.getElementById("inputAcceptGDPRNo").disabled = true;
            document.getElementById("inputAcceptGDPRYes").disabled = true;
        }

        LanguageHandler.SetApi("@ViewBag.MainConfig.url");
        LanguageHandler.GetTranslations();

        ResourceHandler.SetApi("@ViewBag.MainConfig.url");
        ResourceHandler.InitializeResources();
        SignalRHandler.SetApi("@ViewBag.MainConfig.url");
        SignalRHandler.Connect("@ViewBag.MainConfig.grpname");

        localStorage.ConfigURL = "@ViewBag.MainConfig.url";
        localStorage.ConfigGroupName = "@ViewBag.MainConfig.grpname";
        localStorage.ConfigHotelName = "@ViewBag.MainConfig.hotelname";

        var changeLanguageAuto = ko.computed(function () {
            if (SignalRHandler.customer() != null) {
                localStorage.GlobalLanguageCode = SignalRHandler.customer().LanguageCode;
                LanguageHandler.ChangeLanguage(SignalRHandler.customer().LanguageCode);

                if (SignalRHandler.customer().SendEmailValue == false || SignalRHandler.customer().SendEmailValue == null) {
                    document.getElementById("inputAcceptEmailsNo").checked = true;
                }
                else {
                    document.getElementById("inputAcceptEmailsYes").checked = true;
                }

                if (SignalRHandler.customer().SendLetterValue == false || SignalRHandler.customer().SendLetterValue == null) {
                    document.getElementById("inputAcceptGDPRNo").checked = true;
                }
                else {
                    document.getElementById("inputAcceptGDPRYes").checked = true;
                    localStorage.GdprFlag = true;
                }
            }
        });
    });

    //function GetSelectedLanguage(lang) {
    //    var e = document.getElementById("availableLanguages");
    //    var selectedLng = e.options[e.selectedIndex].value;
    //    LanguageHandler.ChangeLanguage(selectedLng);
    //    localStorage.GlobalLanguageCode = selectedLng;
    //}

    function placeSignatureBtn() {
        if (SignalRHandler.customer() == null) {
            page1.hasErrorMessage(true);
            page1.errorMessage(LanguageHandler.selectedDictionary().NoCustomerTxt);
            window.scrollTo(0, 0);
            return;
        }

        if (!document.getElementById('inputFirstName').value || !document.getElementById('inputLastName').value || !document.getElementById('inputEmail').value) {
            page1.hasErrorMessage(true);
            page1.errorMessage(LanguageHandler.selectedDictionary().RequiredFieldsTxt);
            window.scrollTo(0, 0);
            return;
        }

        var emailValidationFlag = validate();
        if (!emailValidationFlag) {
            page1.hasErrorMessage(true);
            page1.errorMessage(LanguageHandler.selectedDictionary().ValidEmailTxt);
            window.scrollTo(0, 0);
            return;
        }

        var inputAcceptGdpr = CheckForAcceptGdpr();
        if (!inputAcceptGdpr) {
            page1.hasErrorMessage(true);
            page1.errorMessage(LanguageHandler.selectedDictionary().AcceptGdprTxt);
            window.scrollTo(0, 0);
            return;
        }

        var inputAcceptEmails = CheckForAcceptEmail();

        var inputFirstName = document.getElementById('inputFirstName').value;
        var inputLastName = document.getElementById('inputLastName').value;
        var inputPassportNo = document.getElementById('inputPassportNo').value;
        var inputStreetAddress = document.getElementById('inputStreetAddress').value;
        var inputZipcode = document.getElementById('inputZipcode').value;
        var inputCity = document.getElementById('inputCity').value;
        var inputNationality = document.getElementById('inputNationality').value;
        var inputEmail = document.getElementById('inputEmail').value;
        var inputMobile = document.getElementById('inputMobile').value;
        var inputRoom = document.getElementById('inputRoom').value;
        var customerData = {
            FirstName: inputFirstName,
            LastName: inputLastName,
            Passport: inputPassportNo,
            Street: inputStreetAddress,
            ZipCode: inputZipcode,
            City: inputCity,
            Nationality: inputNationality,
            Email: inputEmail,
            Mobile: inputMobile,
            Room: inputRoom,
            SendEmailValue: inputAcceptEmails,
            SendLetterValue: inputAcceptGdpr,
            ReservationNo: SignalRHandler.customer().ReservationNo,
            Arrival: SignalRHandler.customer().Arrival,
            Departure: SignalRHandler.customer().Departure,
            LanguageCode: SignalRHandler.customer().LanguageCode,

            //###### Get The rest Fields just to send them #########//
            //######################################################//
            MemberId: SignalRHandler.customer().MemberId,
            DateOfBirth: SignalRHandler.customer().DateOfBirth,
            Company: SignalRHandler.customer().Company,
            CountryId: SignalRHandler.customer().CountryId,
            Country: SignalRHandler.customer().Country,
            CreditCard: SignalRHandler.customer().CreditCard,
            Phone: SignalRHandler.customer().Phone,
            MethodOfPayment: SignalRHandler.customer().MethodOfPayment,
            LanguageId: SignalRHandler.customer().LanguageId,
            LanguageCode: SignalRHandler.customer().LanguageCode,
            Signature: SignalRHandler.customer().Signature,
            User: SignalRHandler.customer().User,
            timestamp: SignalRHandler.customer().timestamp,
            ClientName: SignalRHandler.customer().ClientName,
            ShowPrice: SignalRHandler.customer().ShowPrice,
            Price: SignalRHandler.customer().Price,
            IsInvoice: SignalRHandler.customer().IsInvoice,
            CheckAllAds: SignalRHandler.customer().CheckAllAds,
            SendLetterValue: SignalRHandler.customer().SendLetterValue,
            SendPhoneValue: SignalRHandler.customer().SendPhoneValue,
            SendEmailValue: SignalRHandler.customer().SendEmailValue,
            SendTextMessageValue: SignalRHandler.customer().SendTextMessageValue,
            Afm: SignalRHandler.customer().Afm,
            AcceptanceText: SignalRHandler.customer().AcceptanceText,
            SignalRId: SignalRHandler.customer().SignalRId,
            InvoiceAfm: SignalRHandler.customer().InvoiceAfm,
            InvoiceCompany: SignalRHandler.customer().InvoiceCompany,
            InvoiceOccupation: SignalRHandler.customer().InvoiceOccupation,
            InvoiceStreet: SignalRHandler.customer().InvoiceStreet,
            InvoiceZipCode: SignalRHandler.customer().InvoiceZipCode,
            InvoiceCity: SignalRHandler.customer().InvoiceCity,
            InvoiceCountry: SignalRHandler.customer().InvoiceCountry,
            Status: SignalRHandler.customer().Status,
            CheckedItem1Value: SignalRHandler.customer().CheckedItem1Value,
            CheckedItem2Value: SignalRHandler.customer().CheckedItem2Value,
            CheckedItem3Value: SignalRHandler.customer().CheckedItem3Value,
            CheckedItem4Value: SignalRHandler.customer().CheckedItem4Value,
            CheckedItem5Value: SignalRHandler.customer().CheckedItem5Value,
            CheckedItem6Value: SignalRHandler.customer().CheckedItem6Value,
            CheckedItem7Value: SignalRHandler.customer().CheckedItem7Value,
            AcceptMail: SignalRHandler.customer().AcceptMail,
            gender: SignalRHandler.customer().gender,
            titel: SignalRHandler.customer().titel
        }

        var customerInput = new FastCheckInCustomerModel(customerData);
        localStorage.CustomerInput = JSON.stringify(customerInput);
        var link = localStorage.ConfigURL+"ESignature/GetSettings";
        window.location.href = link;
    }

    function OnFocusChanges(x) {
        x.style.color = "#333";
    }

    function validateEmail(email) {
      var re = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return re.test(email);
    }

    function validate() {
      var $result = $("#inputEmail");
      var email = $("#inputEmail").val();
        if (validateEmail(email)) {
            return true;
      } else {
        $result.css("color", "red");
      }
      return false;
    }

    function CheckForAcceptEmail() {
        if (document.getElementById("inputAcceptEmailsNo").checked == true) {
            return false;
        }
        else if (document.getElementById("inputAcceptEmailsYes").checked == true) {
            return true;
        }
        else {
            return false;
        }
    }

     function CheckForAcceptGdpr() {
         if (document.getElementById("inputAcceptGDPRNo").checked == true) {
             return false;
         }
         else if (document.getElementById("inputAcceptGDPRYes").checked == true) {
             return true;
         }
         else {
             return false;
         }
    }

    function StoreCustomerInputs() {
        var inputFirstName = document.getElementById('inputFirstName').value;
        var inputLastName = document.getElementById('inputLastName').value;
        var inputPassportNo = document.getElementById('inputPassportNo').value;
        var inputStreetAddress = document.getElementById('inputStreetAddress').value;
        var inputZipcode = document.getElementById('inputZipcode').value;
        var inputCity = document.getElementById('inputCity').value;
        var inputNationality = document.getElementById('inputNationality').value;
        var inputEmail = document.getElementById('inputEmail').value;
        var inputMobile = document.getElementById('inputMobile').value;
        var inputRoom = document.getElementById('inputRoom').value;
        var inputAcceptEmails = CheckForAcceptEmail();

        var customerTmpData = {
            FirstName: inputFirstName,
            LastName: inputLastName,
            Passport: inputPassportNo,
            Street: inputStreetAddress,
            ZipCode: inputZipcode,
            City: inputCity,
            Nationality: inputNationality,
            Email: inputEmail,
            Mobile: inputMobile,
            Room: inputRoom,
            SendEmailValue: inputAcceptEmails
        }
         localStorage.CustomerInput = JSON.stringify(customerTmpData);
    }

    function clickHrefFunction() {
        document.getElementById("inputAcceptGDPRNo").disabled = false;
        document.getElementById("inputAcceptGDPRYes").disabled = false;
        localStorage.GdprFlag = true;
        StoreCustomerInputs();
        $('#myModal').modal('show');
         setTimeout(function () {
          $("#frame").attr("src", "https://www.mitsishotels.com/privacy-policy/");
        }, 2000);
    }
</script>

<style>
    .customLabelsStyle {
        font-family: @format.labelAttributes.fontFamily;
        font-size: @(@format.labelAttributes.fontSize + "px");
    }
</style>







